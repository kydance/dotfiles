{
    // -----------------------------------------------------------------
    "editor.fontSize": 16,
    "editor.inlineSuggest.enabled": true,
    "editor.smoothScrolling": true,
    "editor.cursorBlinking": "smooth",
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.fontFamily": "'Source Code Pro', 'Hack Nerd Font Mono'",
    "editor.lineNumbers": "relative",
    "editor.guides.bracketPairs": "active",
    "editor.rulers": [100],
    "editor.wordWrap": "on",
    "editor.renderWhitespace": "boundary",
    "editor.scrollbar.verticalScrollbarSize": 12,
    "editor.minimap.enabled": false,

    "window.commandCenter": false,
    "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${profileName}",
    "window.zoomLevel": 0.3,
    "workbench.activityBar.location": "hidden",
    "workbench.colorTheme": "Gruvbox Dark Hard",
    "workbench.iconTheme": "material-icon-theme",
    "workbench.layoutControl.enabled": false,
    "workbench.list.smoothScrolling": true,
    "workbench.colorCustomizations": { "statusBar.background": "#005f5f" },

    "terminal.integrated.enableMultiLinePasteWarning": "auto",
    "terminal.integrated.defaultProfile.linux": "zsh",
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "terminal.integrated.smoothScrolling": true,
    "terminal.integrated.inheritEnv": false,

    "files.autoSave": "onFocusChange",

    // -----------------------------------------------------------------
    // Vim
    "extensions.experimental.affinity": { "vscodevim.vim": 1 }, // To improve performance
    "vim.leader": "<space>", // leader - prefix key
    "vim.easymotion": true,
    "vim.useSystemClipboard": true,
    "vim.replaceWithRegister": true,
    "vim.ignorecase": true,
    "vim.smartcase": true,
    "vim.foldfix": true,
    "vim.hlsearch": true,
    "vim.highlightedyank.enable": true,
    "vim.highlightedyank.duration": 500,

    // Input Method
    // `brew tap daipeihust/tap && brew install im-select`
    "vim.autoSwitchInputMethod.enable": true,
    "vim.autoSwitchInputMethod.defaultIM": "com.apple.keylayout.ABC",
    "vim.autoSwitchInputMethod.obtainIMCmd": "/opt/homebrew/bin/im-select",
    "vim.autoSwitchInputMethod.switchIMCmd": "/opt/homebrew/bin/im-select {im}",

    "vim.useCtrlKeys": true, // 是否由vim接管ctrl+any的按键，而不是vscode
    // 由vscode进行处理，而不是vscode-vim插件
    "vim.handleKeys": {
        "<C-d>": true, // 向下滚动半页
        "<C-f>": true, // 向下滚动一页
        "<C-e>": true, // 向下滚动一行
        "<C-s>": true,
        "<C-z>": false,
        "<C-a>": true,
        "<C-c>": true,
        "<C-v>": true,
        "<C-x>": true
    },

    // 普通模式下的非递归按键绑定
    "vim.normalModeKeyBindingsNonRecursive": [
        { "before": ["<C-t>"], "commands": ["workbench.action.terminal.focus"]},

        // Split window
        { "before": ["leader", "v", "p"], "commands": [{ "command": "workbench.action.splitEditorDown" }]},
        { "before": ["leader", "s", "p"], "commands": [{ "command": "workbench.action.splitEditorRight" }]},

        // Resize window
        { "before": ["<C-k>"], "commands": [{ "command": "workbench.action.increaseViewHeight" }]},
        { "before": ["<C-j>"], "commands": [{ "command": "workbench.action.decreaseViewHeight" }]},
        { "before": ["<C-h>"], "commands": [{ "command": "workbench.action.increaseViewWidth" }]},
        { "before": ["<C-l>"], "commands": [{ "command": "workbench.action.decreaseViewWidth" }]},

        // 语义级 重命名
        { "before": ["leader", "r"],  "commands": [{"command": "editor.action.rename"}] },

        { "before": ["g", "h"],  "commands": [{"command": "editor.action.showHover"}] },
        { "before": ["g", "d"],  "commands": [{"command": "editor.action.revealDefinition"}] },
        { "before": ["g", "r"],  "commands": [{"command": "editor.action.goToReferences"}] },
        { "before": ["g", "i"],  "commands": [{"command": "editor.action.goToImplementation"}] },

        // 侧边栏：显示与隐藏
        { "before": ["leader", "e"], "commands": [{"command": "workbench.explorer.fileView.focus"}] },
        { "before": [ "leader", "leader", "e"], "commands": ["workbench.action.toggleActivityBarVisibility"] },

        { "before": ["leader", "g", "g"], "commands": [{ "command": "workbench.action.quickOpen" }]},
        //  Global find
        { "before": ["leader", "g", "f"], "commands": [{ "command": "workbench.view.search" }]},

        { "before": ["g", "["], "commands": ["editor.action.marker.prevInFiles"]},
        { "before": ["g", "]"], "commands": ["editor.action.marker.nextInFiles"]},

        // Source Control Git
        { "before": [ "leader", "s"], "commands": ["workbench.scm.focus"] },
        // Start to debug
        { "before": [ "leader", "d" ], "commands": ["workbench.action.debug.start"] },

        // save file
        { "before": ["leader","w"], "commands": [":w!" ] },
        // quit
        { "before": ["leader","q"], "commands": [":q" ] },
        { "before": ["leader", "t"], "commands": [":terminal"] }, 
        // No highlight
        { "before": ["leader", "n", "h"], "commands": [":nohl"] },
        { "before": ["H"], "after": ["^"] },
        { "before": ["L"], "after": ["$"] },
        // Blockwise visual mode
        { "before": ["\\"], "commands": ["extension.vim_ctrl+v"]},

        { "before": ["g", "t"], "commands": [":tabnext"] }, 
        { "before": ["g", "T"], "commands": [":tabprev"] }, 

        // project-manager
        { "before": ["leader", "p", "m"],  "commands": [{
                "command":"workbench.view.extension.project-manager",
                "when":"viewContainer.workbench.view.extension.project-manager.enabled"
        }]},

        // Bookmarks
        { "before": ["<leader>", "m"], "commands": ["bookmarks.toggle"]},
        { "before": ["<leader>", "b"], "commands": ["bookmarks.list"]},

        // PlantUML
        { "before": ["leader", "p", "t"], "commands": [{
            "command": "plantuml.exportDocument"
        }]},
    ],

   // 插入模式下的 递归 按键绑定
    "vim.insertModeKeyBindings": [
        { "before": ["j", "k"], "after": ["<Esc>"] } 
    ],

    "vim.commandLineModeKeyBindingsNonRecursive": [
    ],

    // 可视模式下的递归按键绑定
    "vim.operatorPendingModeKeyBindings": [
    ],

    "vim.visualModeKeyBindings": [
        { "before": ["H"], "after": ["^"] },
        { "before": ["L"], "after": ["$"] },

        // 连续内缩 / 外缩
        { "before": [">"], "commands": [ "editor.action.indentLines"] },
        { "before": ["<"], "commands": [ "editor.action.outdentLines"] },

        // Visual 模式下，`p` 粘贴时而不覆盖当前寄存器
        { "before": ["p"], "after": [ "p", "g", "v", "y"] }
    ],

    // -----------------------------------------------------------------
    // Git
    "git.autofetch": true,
    "git.openRepositoryInParentFolders": "never",

    // -----------------------------------------------------------------
    // Project Manager
    "projectManager.git.baseFolders": [
        "~/git-space/"
    ],

    // -----------------------------------------------------------------
    // todo-tree settings
    "todo-tree.regex.regex": "((%|#|\"\"\"|'''|//|<!--|^\\s*\\*)\\s*($TAGS)|^\\s*- \\[( |x|X)\\])",
    "todo-tree.regex.regexCaseSensitive": true,
    "todo-tree.tree.showCountsInTree": true,
    "todo-tree.general.tags": [
        "TODO",     // 代表未完成事项
        "FIXME",    // 代表需要修复的事项
        "NOTE",     // 添加一些说明文字
        "TAG",      // TAG
        "BUG",      // 代表必须修复的 BUG
        "XXX"       // 代表标识处代码虽然实现了功能，但是实现的方法有待商榷，希望将来能改进
    ],
    "todo-tree.highlights.defaultHighlight": {
        "gutterIcon": true,
        "rulerLane": "right",
        "foreground": "#ffffff",
        "background": "#2e5e18",
        "iconColour": "#38ad01"
    },
    "todo-tree.highlights.customHighlight": {
        "FIXME": {
            "icon": "flame",
            "foreground": "#000000",
            "background": "#FF0000",
            "iconColour": "#FF0000"
        },
        "BUG": {
            "icon": "bug",
            "foreground": "#000000",
            "background": "#00FF00",
            "iconColour": "#00FF00"
        },
        "TAG": {
            "icon": "tag",
            "background": "#0b7c69",
            "iconColour": "#0b7c69"
        },
        "NOTE": {
            "icon": "note",
            "background": "#7675cf",
            "iconColour": "#7675cf"
        },
        "XXX": {
            "icon": "beaker",
            "background": "#FFA500",
            "iconColour": "#FFA500"
        }
    },

    // -----------------------------------------------------------------
    // Markdownlint
    // 关闭 preview 滚动的时候, Markdown 文件跟着滚动
    "markdown.preview.scrollEditorWithPreview": false,
    "markdownlint.config": {
        "MD010": false,
        "MD024": false,
        "MD033": false
    },

    // -----------------------------------------------------------------
    // Golang
    "gopls": {  "ui.semanticTokens": true },
    "go.toolsManagement.autoUpdate": true,
    "go.inlayHints.parameterNames": false,
    "go.lintTool": "golangci-lint",
    "go.lintFlags": [ "--fast" ],

    // -----------------------------------------------------------------
    // remote SSH
    "remote.SSH.remotePlatform": {
        "*.devcloud.woa.com": "linux",
        "DevCloud": "linux"
    },
    
    // -----------------------------------------------------------------
    // Clangd
    "C_Cpp.intelliSenseEngine": "disabled",
    "clangd.onConfigChanged": "restart",
    "clangd.path": "/usr/bin/clangd",
    "clangd.arguments": [
        "--compile-commands-dir=${workspaceFolder}/build",
        "--header-insertion=never"
    ],
    "[c]": {
        "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
    },
    "[cpp]": {
        "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
    },

    // -----------------------------------------------------------------
    // CMake
    "cmake.showOptionsMovedNotification": false,
    "cmake.configureOnOpen": true,
    "cmake.generator": "Ninja",
    "cmake.parallelJobs": 0,

    // -----------------------------------------------------------------
    // LaTex
    "latex-workshop.latex.outDir": "%DIR%",
    "latex-workshop.latex.tools": [
        {
            "name": "xelatex",
            "command": "xelatex",
            "args": [
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "--output-directory=%OUTDIR%",
                "%DOCFILE%"
            ]
        },
        {
            "name": "pdflatex",
            "command": "pdflatex",
            "args": [
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "--output-directory=%OUTDIR%",
                "%DOCFILE%"
            ]
        },
        {
            "name": "bibtex",
            "command": "bibtex",
            "args": ["%OUTDIR%/%DOCFILE%"],
            "env": {"TEXMFOUTPUT": "%OUTDIR%"}
        },
        {
            "name": "biber",
            "command": "biber",
            "args": ["%OUTDIR%/%DOCFILE%"],
            "env": {"TEXMFOUTPUT": "%OUTDIR%"}
        }
    ],
    "latex-workshop.latex.recipes": [
        { "name": "xelatex", "tools": ["xelatex"] },
        { "name": "pdflatex", "tools": ["pdflatex"] },
        { "name": "xe->bibtex->xe*2", "tools": ["xelatex", "bibtex", "xelatex", "xelatex"] },
        { "name": "xe->biber->xe*2", "tools": ["xelatex", "biber", "xelatex", "xelatex"] },
        { "name": "pdf->bib->pdf*2", "tools": ["pdflatex", "bibtex", "pdflatex", "pdflatex"] }
    ],
    "latex-workshop.view.pdf.viewer": "tab",
    "latex-workshop.view.pdf.internal.synctex.keybinding": "double-click",
    "latex-workshop.latex.clean.fileTypes": [
        "*.aux",
        "*.bbl",
        "*.blg",
        "*.idx",
        "*.ind",
        "*.lof",
        "*.lot",
        "*.out",
        "*.toc",
        "*.acn",
        "*.acr",
        "*.alg",
        "*.glg",
        "*.glo",
        "*.gls",
        "*.ist",
        "*.fls",
        "*.log",
        "*.fdb_latexmk",
        "*.gz"
    ],
    "latex-workshop.latex.autoClean.run": "onFailed",
    "latex-workshop.latex.autoBuild.run": "onSave",
    "latex-workshop.latex.recipe.default": "lastUsed",
    "latex-workshop.showContextMenu": true,
    "latex-workshop.message.error.show": false,
    "latex-workshop.message.warning.show": false,

    // plantuml
    "plantuml.exportOutDir": ".",
    "plantuml.exportFormat": "svg",
    "plantuml.exportSubFolder": false,
}
